stages:
  - build
  - validate
  - plan
  - apply

build:
  stage: build
  image: node:10-alpine
  script:
    - npm run build
    - cp Procfile dist/Procfile
    - cp package.json dist/package.json
  artifacts:
    paths:
      - dist

.infra_common: &infra_common
  image:
    name: hashicorp/terraform:light
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' 
  before_script:
    - cd infrastructure
    - terraform --version
    - terraform init

validate:
  stage: validate
  <<: *infra_common
  dependencies:
    - build
  script:
    - terraform validate
  artifacts:
    paths:
      - dist

plan:
  stage: plan
  <<: *infra_common
  dependencies:
    - validate
  script:
    - terraform plan -out "planfile"
  artifacts:
    paths:
      - infrastructure/planfile
      - dist

apply:
  stage: apply
  <<: *infra_common
  dependencies:
    - plan
  script:
    - terraform apply -input=false "planfile"
  when: manual
  environment:
    name: prod/$CI_COMMIT_REF_SLUG-$CI_PROJECT_ID
    on_stop: stop_environment

stop_environment:
  stage: apply
  <<: *infra_common
  script:
    - terraform destroy -input=false
  environment:
    name: prod/$CI_COMMIT_REF_SLUG-$CI_PROJECT_ID
    action: stop
  when: manual
